{"version":3,"sources":["angular-gettext.js","angular-growl.js","lscache.js","cas-auth-api.js"],"names":["angular","module","constant","str","factory","gettextPlurals","$http","$cacheFactory","$interpolate","$rootScope","broadcastUpdated","$broadcast","catalog","noContext","test","isHTMLModified","element","html","prefixDebug","string","debug","currentLanguage","baseLanguage","debugPrefix","addTranslatedMarkers","showTranslatedMarkers","translatedMarkerPrefix","translatedMarkerSuffix","strings","cache","setCurrentLanguage","lang","this","getCurrentLanguage","setStrings","language","key","val","isString","isArray","obj","context","getStringForm","n","stringTable","contexts","plurals","getString","scope","getPlural","stringPlural","form","$count","loadRemote","url","method","then","response","data","directive","gettextCatalog","$parse","$animate","$compile","$window","assert","condition","missing","found","Error","trim","String","prototype","value","replace","msie","parseInt","exec","lowercase","navigator","userAgent","restrict","terminal","compile","attrs","translatePlural","translateN","msgid","translateContext","slice","post","update","translated","pluralScope","$new","countFn","oldContents","contents","length","linking","newWrapper","newContents","enter","leave","$watch","$on","filter","input","$stateful","langCode","templateUrl","reference","inline","limitMessages","controller","$scope","$interval","growl","growlMessages","referenceId","initDirective","inlineMessage","isDefined","inlineMessages","directives","isUndefined","stopTimeoutClose","message","clickToClose","forEach","promises","promise","cancel","close","deleteMessage","alertClasses","alert-success","severity","alert-error","alert-danger","alert-info","alert-warning","icon","disableIcons","alert-dismissable","disableCloseButton","showCountDown","disableCountDown","ttl","wrapperClasses","classes","position","computeTitle","ret","success","error","info","warn","run","$templateCache","undefined","get","put","provider","_ttl","warning","_messagesKey","_messageTextKey","_messageTitleKey","_messageSeverityKey","_messageTTLKey","_onlyUniqueMessages","_messageVariableKey","_referenceId","_inline","_position","_disableCloseButton","_disableIcons","_reverseOrder","_disableCountDown","_translateMessages","globalTimeToLive","k","hasOwnProperty","globalTranslateMessages","translateMessages","globalDisableCloseButton","globalDisableIcons","globalReversedOrder","reverseOrder","globalDisableCountDown","countDown","messageVariableKey","globalInlineMessages","globalPosition","messagesKey","messageTextKey","messageTitleKey","messageSeverityKey","messageTTLKey","onlyUniqueMessages","serverMessagesInterceptor","$q","checkResponse","addServerMessages","responseError","rejection","reject","$get","$sce","$filter","broadcastMessage","translate","translateMessage","text","variables","title","polation","addedMessage","addMessage","sendMessage","config","_config","destroy","setText","newText","trustAsHtml","onclose","onopen","general","toLowerCase","messages","i","onlyUnique","e","service","preLoad","preloadDirectives","directiveForRefId","refId","self","getAllMessages","destroyAllMessages","msgText","msg","getTrustedHtml","countdown","countdownFunction","push","diff","splice","unshift","bind","index","root","define","amd","exports","lscache","supportsStorage","cachedStorage","setItem","removeItem","isOutOfSpace","name","supportsJSON","cachedJSON","window","JSON","expirationKey","CACHE_SUFFIX","currentTime","Math","floor","Date","getTime","EXPIRY_UNITS","getItem","localStorage","CACHE_PREFIX","cacheBucket","eachKey","fn","prefixRegExp","RegExp","match","indexOf","flushItem","exprKey","flushExpiredItem","expr","expirationTime","EXPIRY_RADIX","err","warnings","console","MAX_DATE","set","time","stringify","storedKey","storedKeys","expiration","size","sort","a","b","targetSize","pop","toString","parse","remove","supported","flush","flushExpired","setBucket","bucket","resetBucket","enableWarnings","enabled","endsWith","needle","haystack","subjectString","isNumber","isFinite","lastIndex","startsWith","apiUrl","endpoint","_endpoints","_authenticationApiBaseUrl","token","_ticketUrl","_maxAttempts","_requireAccessToken","_cacheAccessToken","_cacheExpiresMinutes","_managedApis","setAuthenticationApiBaseUrl","setTicketUrl","addManagedApi","urls","setRequireAccessToken","require","setCacheAccessToken","$injector","isManagedApi","beginAuthentication","isObject","_deferredAuthentication","defer","_accessToken","serviceResponse","params","id","ticketResponse","st","tokenResponse","resolve","requestInterceptor","attempts","deferRequest","headers","deferred","responseInterceptor","responseErrorInterceptor","status","result","request","$httpProvider","interceptors"],"mappings":"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","file":"library.min.js","sourcesContent":["angular.module('gettext', []);\n\nangular.module('gettext').constant('gettext', function (str) {\n    /*\n     * Does nothing, simply returns the input string.\n     *\n     * This function serves as a marker for `grunt-angular-gettext` to know that\n     * this string should be extracted for translations.\n     */\n    return str;\n});\n\nangular.module('gettext').factory('gettextCatalog', [\"gettextPlurals\", \"$http\", \"$cacheFactory\", \"$interpolate\", \"$rootScope\", function (gettextPlurals, $http, $cacheFactory, $interpolate, $rootScope) {\n    var catalog;\n    var noContext = '$$noContext';\n\n    // IE8 returns UPPER CASE tags, even though the source is lower case.\n    // This can causes the (key) string in the DOM to have a different case to\n    // the string in the `po` files.\n    // IE9, IE10 and IE11 reorders the attributes of tags.\n    var test = '<span id=\"test\" title=\"test\" class=\"tested\">test</span>';\n    var isHTMLModified = (angular.element('<span>' + test + '</span>').html() !== test);\n\n    var prefixDebug = function (string) {\n        if (catalog.debug && catalog.currentLanguage !== catalog.baseLanguage) {\n            return catalog.debugPrefix + string;\n        } else {\n            return string;\n        }\n    };\n\n    var addTranslatedMarkers = function (string) {\n        if (catalog.showTranslatedMarkers) {\n            return catalog.translatedMarkerPrefix + string + catalog.translatedMarkerSuffix;\n        } else {\n            return string;\n        }\n    };\n\n    function broadcastUpdated() {\n        $rootScope.$broadcast('gettextLanguageChanged');\n    }\n\n    catalog = {\n        debug: false,\n        debugPrefix: '[MISSING]: ',\n        showTranslatedMarkers: false,\n        translatedMarkerPrefix: '[',\n        translatedMarkerSuffix: ']',\n        strings: {},\n        baseLanguage: 'en',\n        currentLanguage: 'en',\n        cache: $cacheFactory('strings'),\n\n        setCurrentLanguage: function (lang) {\n            this.currentLanguage = lang;\n            broadcastUpdated();\n        },\n\n        getCurrentLanguage: function () {\n            return this.currentLanguage;\n        },\n\n        setStrings: function (language, strings) {\n            if (!this.strings[language]) {\n                this.strings[language] = {};\n            }\n\n            for (var key in strings) {\n                var val = strings[key];\n\n                if (isHTMLModified) {\n                    // Use the DOM engine to render any HTML in the key (#131).\n                    key = angular.element('<span>' + key + '</span>').html();\n                }\n\n                if (angular.isString(val) || angular.isArray(val)) {\n                    // No context, wrap it in $$noContext.\n                    var obj = {};\n                    obj[noContext] = val;\n                    val = obj;\n                }\n\n                // Expand single strings for each context.\n                for (var context in val) {\n                    var str = val[context];\n                    val[context] = angular.isArray(str) ? str : [str];\n                }\n                this.strings[language][key] = val;\n            }\n\n            broadcastUpdated();\n        },\n\n        getStringForm: function (string, n, context) {\n            var stringTable = this.strings[this.currentLanguage] || {};\n            var contexts = stringTable[string] || {};\n            var plurals = contexts[context || noContext] || [];\n            return plurals[n];\n        },\n\n        getString: function (string, scope, context) {\n            string = this.getStringForm(string, 0, context) || prefixDebug(string);\n            string = scope ? $interpolate(string)(scope) : string;\n            return addTranslatedMarkers(string);\n        },\n\n        getPlural: function (n, string, stringPlural, scope, context) {\n            var form = gettextPlurals(this.currentLanguage, n);\n            string = this.getStringForm(string, form, context) || prefixDebug(n === 1 ? string : stringPlural);\n            if (scope) {\n                scope.$count = n;\n                string = $interpolate(string)(scope);\n            }\n            return addTranslatedMarkers(string);\n        },\n\n        loadRemote: function (url) {\n            return $http({\n                method: 'GET',\n                url: url,\n                cache: catalog.cache\n            }).then(function (response) {\n                var data = response.data;\n                for (var lang in data) {\n                    catalog.setStrings(lang, data[lang]);\n                }\n                return response;\n            });\n        }\n    };\n\n    return catalog;\n}]);\n\nangular.module('gettext').directive('translate', [\"gettextCatalog\", \"$parse\", \"$animate\", \"$compile\", \"$window\", function (gettextCatalog, $parse, $animate, $compile, $window) {\n    // Trim polyfill for old browsers (instead of jQuery)\n    // Based on AngularJS-v1.2.2 (angular.js#620)\n    var trim = (function () {\n        if (!String.prototype.trim) {\n            return function (value) {\n                return (typeof value === 'string') ? value.replace(/^\\s*/, '').replace(/\\s*$/, '') : value;\n            };\n        }\n        return function (value) {\n            return (typeof value === 'string') ? value.trim() : value;\n        };\n    })();\n\n    function assert(condition, missing, found) {\n        if (!condition) {\n            throw new Error('You should add a ' + missing + ' attribute whenever you add a ' + found + ' attribute.');\n        }\n    }\n\n    var msie = parseInt((/msie (\\d+)/.exec(angular.lowercase($window.navigator.userAgent)) || [])[1], 10);\n\n    return {\n        restrict: 'AE',\n        terminal: true,\n        compile: function compile(element, attrs) {\n            // Validate attributes\n            assert(!attrs.translatePlural || attrs.translateN, 'translate-n', 'translate-plural');\n            assert(!attrs.translateN || attrs.translatePlural, 'translate-plural', 'translate-n');\n\n            var msgid = trim(element.html());\n            var translatePlural = attrs.translatePlural;\n            var translateContext = attrs.translateContext;\n\n            if (msie <= 8) {\n                // Workaround fix relating to angular adding a comment node to\n                // anchors. angular/angular.js/#1949 / angular/angular.js/#2013\n                if (msgid.slice(-13) === '<!--IE fix-->') {\n                    msgid = msgid.slice(0, -13);\n                }\n            }\n\n            return {\n                post: function (scope, element, attrs) {\n                    var countFn = $parse(attrs.translateN);\n                    var pluralScope = null;\n                    var linking = true;\n\n                    function update() {\n                        // Fetch correct translated string.\n                        var translated;\n                        if (translatePlural) {\n                            scope = pluralScope || (pluralScope = scope.$new());\n                            scope.$count = countFn(scope);\n                            translated = gettextCatalog.getPlural(scope.$count, msgid, translatePlural, null, translateContext);\n                        } else {\n                            translated = gettextCatalog.getString(msgid,  null, translateContext);\n                        }\n\n                        var oldContents = element.contents();\n\n                        if (oldContents.length === 0){\n                            return;\n                        }\n\n                        // Avoid redundant swaps\n                        if (translated === trim(oldContents.html())){\n                            // Take care of unlinked content\n                            if (linking){\n                                $compile(oldContents)(scope);\n                            }\n                            return;\n                        }\n\n                        // Swap in the translation\n                        var newWrapper = angular.element('<span>' + translated + '</span>');\n                        $compile(newWrapper.contents())(scope);\n                        var newContents = newWrapper.contents();\n\n                        $animate.enter(newContents, element);\n                        $animate.leave(oldContents);\n                    }\n\n                    if (attrs.translateN) {\n                        scope.$watch(attrs.translateN, update);\n                    }\n\n                    scope.$on('gettextLanguageChanged', update);\n\n                    update();\n                    linking = false;\n                }\n            };\n        }\n    };\n}]);\n\nangular.module('gettext').filter('translate', [\"gettextCatalog\", function (gettextCatalog) {\n    function filter(input, context) {\n        return gettextCatalog.getString(input, null, context);\n    }\n    filter.$stateful = true;\n    return filter;\n}]);\n\n// Do not edit this file, it is autogenerated using genplurals.py!\nangular.module(\"gettext\").factory(\"gettextPlurals\", function () {\n    return function (langCode, n) {\n        switch (langCode) {\n            case \"ay\":  // Aymará\n            case \"bo\":  // Tibetan\n            case \"cgg\": // Chiga\n            case \"dz\":  // Dzongkha\n            case \"fa\":  // Persian\n            case \"id\":  // Indonesian\n            case \"ja\":  // Japanese\n            case \"jbo\": // Lojban\n            case \"ka\":  // Georgian\n            case \"kk\":  // Kazakh\n            case \"km\":  // Khmer\n            case \"ko\":  // Korean\n            case \"ky\":  // Kyrgyz\n            case \"lo\":  // Lao\n            case \"ms\":  // Malay\n            case \"my\":  // Burmese\n            case \"sah\": // Yakut\n            case \"su\":  // Sundanese\n            case \"th\":  // Thai\n            case \"tt\":  // Tatar\n            case \"ug\":  // Uyghur\n            case \"vi\":  // Vietnamese\n            case \"wo\":  // Wolof\n            case \"zh\":  // Chinese\n                // 1 form\n                return 0;\n            case \"is\":  // Icelandic\n                // 2 forms\n                return (n%10!=1 || n%100==11) ? 1 : 0;\n            case \"jv\":  // Javanese\n                // 2 forms\n                return n!=0 ? 1 : 0;\n            case \"mk\":  // Macedonian\n                // 2 forms\n                return n==1 || n%10==1 ? 0 : 1;\n            case \"ach\": // Acholi\n            case \"ak\":  // Akan\n            case \"am\":  // Amharic\n            case \"arn\": // Mapudungun\n            case \"br\":  // Breton\n            case \"fil\": // Filipino\n            case \"fr\":  // French\n            case \"gun\": // Gun\n            case \"ln\":  // Lingala\n            case \"mfe\": // Mauritian Creole\n            case \"mg\":  // Malagasy\n            case \"mi\":  // Maori\n            case \"oc\":  // Occitan\n            case \"pt_BR\":  // Brazilian Portuguese\n            case \"tg\":  // Tajik\n            case \"ti\":  // Tigrinya\n            case \"tr\":  // Turkish\n            case \"uz\":  // Uzbek\n            case \"wa\":  // Walloon\n            case \"zh\":  // Chinese\n                // 2 forms\n                return n>1 ? 1 : 0;\n            case \"lv\":  // Latvian\n                // 3 forms\n                return (n%10==1 && n%100!=11 ? 0 : n != 0 ? 1 : 2);\n            case \"lt\":  // Lithuanian\n                // 3 forms\n                return (n%10==1 && n%100!=11 ? 0 : n%10>=2 && (n%100<10 || n%100>=20) ? 1 : 2);\n            case \"be\":  // Belarusian\n            case \"bs\":  // Bosnian\n            case \"hr\":  // Croatian\n            case \"ru\":  // Russian\n            case \"sr\":  // Serbian\n            case \"uk\":  // Ukrainian\n                // 3 forms\n                return (n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n            case \"mnk\": // Mandinka\n                // 3 forms\n                return (n==0 ? 0 : n==1 ? 1 : 2);\n            case \"ro\":  // Romanian\n                // 3 forms\n                return (n==1 ? 0 : (n==0 || (n%100 > 0 && n%100 < 20)) ? 1 : 2);\n            case \"pl\":  // Polish\n                // 3 forms\n                return (n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n            case \"cs\":  // Czech\n            case \"sk\":  // Slovak\n                // 3 forms\n                return (n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;\n            case \"sl\":  // Slovenian\n                // 4 forms\n                return (n%100==1 ? 1 : n%100==2 ? 2 : n%100==3 || n%100==4 ? 3 : 0);\n            case \"mt\":  // Maltese\n                // 4 forms\n                return (n==1 ? 0 : n==0 || ( n%100>1 && n%100<11) ? 1 : (n%100>10 && n%100<20 ) ? 2 : 3);\n            case \"gd\":  // Scottish Gaelic\n                // 4 forms\n                return (n==1 || n==11) ? 0 : (n==2 || n==12) ? 1 : (n > 2 && n < 20) ? 2 : 3;\n            case \"cy\":  // Welsh\n                // 4 forms\n                return (n==1) ? 0 : (n==2) ? 1 : (n != 8 && n != 11) ? 2 : 3;\n            case \"kw\":  // Cornish\n                // 4 forms\n                return (n==1) ? 0 : (n==2) ? 1 : (n == 3) ? 2 : 3;\n            case \"ga\":  // Irish\n                // 5 forms\n                return n==1 ? 0 : n==2 ? 1 : n<7 ? 2 : n<11 ? 3 : 4;\n            case \"ar\":  // Arabic\n                // 6 forms\n                return (n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100>=3 && n%100<=10 ? 3 : n%100>=11 ? 4 : 5);\n            default: // Everything else\n                return n != 1 ? 1 : 0;\n        }\n    }\n});\n","/**\n * angular-growl-v2 - v0.7.8 - 2015-10-25\n * http://janstevens.github.io/angular-growl-2\n * Copyright (c) 2015 Marco Rinck,Jan Stevens,Silvan van Leeuwen; Licensed MIT\n */\nangular.module('angular-growl', []);\nangular.module('angular-growl').directive('growl', [function () {\n    'use strict';\n    return {\n      restrict: 'A',\n      templateUrl: 'templates/growl/growl.html',\n      replace: false,\n      scope: {\n        reference: '@',\n        inline: '=',\n        limitMessages: '='\n      },\n      controller: [\n        '$scope',\n        '$interval',\n        'growl',\n        'growlMessages',\n        function ($scope, $interval, growl, growlMessages) {\n          $scope.referenceId = $scope.reference || 0;\n          growlMessages.initDirective($scope.referenceId, $scope.limitMessages);\n          $scope.growlMessages = growlMessages;\n          $scope.inlineMessage = angular.isDefined($scope.inline) ? $scope.inline : growl.inlineMessages();\n          $scope.$watch('limitMessages', function (limitMessages) {\n            var directive = growlMessages.directives[$scope.referenceId];\n            if (!angular.isUndefined(limitMessages) && !angular.isUndefined(directive)) {\n              directive.limitMessages = limitMessages;\n            }\n          });\n          $scope.stopTimeoutClose = function (message) {\n            if (!message.clickToClose) {\n              angular.forEach(message.promises, function (promise) {\n                $interval.cancel(promise);\n              });\n              if (message.close) {\n                growlMessages.deleteMessage(message);\n              } else {\n                message.close = true;\n              }\n            }\n          };\n          $scope.alertClasses = function (message) {\n            return {\n              'alert-success': message.severity === 'success',\n              'alert-error': message.severity === 'error',\n              'alert-danger': message.severity === 'error',\n              'alert-info': message.severity === 'info',\n              'alert-warning': message.severity === 'warning',\n              'icon': message.disableIcons === false,\n              'alert-dismissable': !message.disableCloseButton\n            };\n          };\n          $scope.showCountDown = function (message) {\n            return !message.disableCountDown && message.ttl > 0;\n          };\n          $scope.wrapperClasses = function () {\n            var classes = {};\n            classes['growl-fixed'] = !$scope.inlineMessage;\n            classes[growl.position()] = true;\n            return classes;\n          };\n          $scope.computeTitle = function (message) {\n            var ret = {\n                'success': 'Success',\n                'error': 'Error',\n                'info': 'Information',\n                'warn': 'Warning'\n              };\n            return ret[message.severity];\n          };\n        }\n      ]\n    };\n  }]);\nangular.module('angular-growl').run([\n  '$templateCache',\n  function ($templateCache) {\n    'use strict';\n    if ($templateCache.get('templates/growl/growl.html') === undefined) {\n      $templateCache.put('templates/growl/growl.html', '<div class=\"growl-container\" ng-class=\"wrapperClasses()\">' + '<div class=\"growl-item alert\" ng-repeat=\"message in growlMessages.directives[referenceId].messages\" ng-class=\"alertClasses(message)\" ng-click=\"stopTimeoutClose(message)\">' + '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\" ng-click=\"growlMessages.deleteMessage(message)\" ng-show=\"!message.disableCloseButton\">&times;</button>' + '<button type=\"button\" class=\"close\" aria-hidden=\"true\" ng-show=\"showCountDown(message)\">{{message.countdown}}</button>' + '<h4 class=\"growl-title\" ng-show=\"message.title\" ng-bind=\"message.title\"></h4>' + '<div class=\"growl-message\" ng-bind-html=\"message.text\"></div>' + '</div>' + '</div>');\n    }\n  }\n]);\nangular.module('angular-growl').provider('growl', function () {\n  'use strict';\n  var _ttl = {\n      success: null,\n      error: null,\n      warning: null,\n      info: null\n    }, _messagesKey = 'messages', _messageTextKey = 'text', _messageTitleKey = 'title', _messageSeverityKey = 'severity', _messageTTLKey = 'ttl', _onlyUniqueMessages = true, _messageVariableKey = 'variables', _referenceId = 0, _inline = false, _position = 'top-right', _disableCloseButton = false, _disableIcons = false, _reverseOrder = false, _disableCountDown = false, _translateMessages = true;\n  this.globalTimeToLive = function (ttl) {\n    if (typeof ttl === 'object') {\n      for (var k in ttl) {\n        if (ttl.hasOwnProperty(k)) {\n          _ttl[k] = ttl[k];\n        }\n      }\n    } else {\n      for (var severity in _ttl) {\n        if (_ttl.hasOwnProperty(severity)) {\n          _ttl[severity] = ttl;\n        }\n      }\n    }\n    return this;\n  };\n  this.globalTranslateMessages = function (translateMessages) {\n    _translateMessages = translateMessages;\n    return this;\n  };\n  this.globalDisableCloseButton = function (disableCloseButton) {\n    _disableCloseButton = disableCloseButton;\n    return this;\n  };\n  this.globalDisableIcons = function (disableIcons) {\n    _disableIcons = disableIcons;\n    return this;\n  };\n  this.globalReversedOrder = function (reverseOrder) {\n    _reverseOrder = reverseOrder;\n    return this;\n  };\n  this.globalDisableCountDown = function (countDown) {\n    _disableCountDown = countDown;\n    return this;\n  };\n  this.messageVariableKey = function (messageVariableKey) {\n    _messageVariableKey = messageVariableKey;\n    return this;\n  };\n  this.globalInlineMessages = function (inline) {\n    _inline = inline;\n    return this;\n  };\n  this.globalPosition = function (position) {\n    _position = position;\n    return this;\n  };\n  this.messagesKey = function (messagesKey) {\n    _messagesKey = messagesKey;\n    return this;\n  };\n  this.messageTextKey = function (messageTextKey) {\n    _messageTextKey = messageTextKey;\n    return this;\n  };\n  this.messageTitleKey = function (messageTitleKey) {\n    _messageTitleKey = messageTitleKey;\n    return this;\n  };\n  this.messageSeverityKey = function (messageSeverityKey) {\n    _messageSeverityKey = messageSeverityKey;\n    return this;\n  };\n  this.messageTTLKey = function (messageTTLKey) {\n    _messageTTLKey = messageTTLKey;\n    return this;\n  };\n  this.onlyUniqueMessages = function (onlyUniqueMessages) {\n    _onlyUniqueMessages = onlyUniqueMessages;\n    return this;\n  };\n  this.serverMessagesInterceptor = [\n    '$q',\n    'growl',\n    function ($q, growl) {\n      function checkResponse(response) {\n        if (response !== undefined && response.data && response.data[_messagesKey] && response.data[_messagesKey].length > 0) {\n          growl.addServerMessages(response.data[_messagesKey]);\n        }\n      }\n      return {\n        'response': function (response) {\n          checkResponse(response);\n          return response;\n        },\n        'responseError': function (rejection) {\n          checkResponse(rejection);\n          return $q.reject(rejection);\n        }\n      };\n    }\n  ];\n  this.$get = [\n    '$rootScope',\n    '$interpolate',\n    '$sce',\n    '$filter',\n    '$interval',\n    'growlMessages',\n    function ($rootScope, $interpolate, $sce, $filter, $interval, growlMessages) {\n      var translate;\n      growlMessages.onlyUnique = _onlyUniqueMessages;\n      growlMessages.reverseOrder = _reverseOrder;\n      try {\n        translate = $filter('translate');\n      } catch (e) {\n      }\n      function broadcastMessage(message) {\n        if (translate && message.translateMessage) {\n          message.text = translate(message.text, message.variables) || message.text;\n          message.title = translate(message.title) || message.title;\n        } else {\n          var polation = $interpolate(message.text);\n          message.text = polation(message.variables);\n        }\n        var addedMessage = growlMessages.addMessage(message);\n        $rootScope.$broadcast('growlMessage', message);\n        $interval(function () {\n        }, 0, 1);\n        return addedMessage;\n      }\n      function sendMessage(text, config, severity) {\n        var _config = config || {}, message;\n        message = {\n          text: text,\n          title: _config.title,\n          severity: severity,\n          ttl: _config.ttl || _ttl[severity],\n          variables: _config.variables || {},\n          disableCloseButton: _config.disableCloseButton === undefined ? _disableCloseButton : _config.disableCloseButton,\n          disableIcons: _config.disableIcons === undefined ? _disableIcons : _config.disableIcons,\n          disableCountDown: _config.disableCountDown === undefined ? _disableCountDown : _config.disableCountDown,\n          position: _config.position || _position,\n          referenceId: _config.referenceId || _referenceId,\n          translateMessage: _config.translateMessage === undefined ? _translateMessages : _config.translateMessage,\n          destroy: function () {\n            growlMessages.deleteMessage(message);\n          },\n          setText: function (newText) {\n            message.text = $sce.trustAsHtml(String(newText));\n          },\n          onclose: _config.onclose,\n          onopen: _config.onopen\n        };\n        return broadcastMessage(message);\n      }\n      function warning(text, config) {\n        return sendMessage(text, config, 'warning');\n      }\n      function error(text, config) {\n        return sendMessage(text, config, 'error');\n      }\n      function info(text, config) {\n        return sendMessage(text, config, 'info');\n      }\n      function success(text, config) {\n        return sendMessage(text, config, 'success');\n      }\n      function general(text, config, severity) {\n        severity = (severity || 'error').toLowerCase();\n        return sendMessage(text, config, severity);\n      }\n      function addServerMessages(messages) {\n        if (!messages || !messages.length) {\n          return;\n        }\n        var i, message, severity, length;\n        length = messages.length;\n        for (i = 0; i < length; i++) {\n          message = messages[i];\n          if (message[_messageTextKey]) {\n            severity = (message[_messageSeverityKey] || 'error').toLowerCase();\n            var config = {};\n            config.variables = message[_messageVariableKey] || {};\n            config.title = message[_messageTitleKey];\n            if (message[_messageTTLKey]) {\n              config.ttl = message[_messageTTLKey];\n            }\n            sendMessage(message[_messageTextKey], config, severity);\n          }\n        }\n      }\n      function onlyUnique() {\n        return _onlyUniqueMessages;\n      }\n      function reverseOrder() {\n        return _reverseOrder;\n      }\n      function inlineMessages() {\n        return _inline;\n      }\n      function position() {\n        return _position;\n      }\n      return {\n        warning: warning,\n        error: error,\n        info: info,\n        success: success,\n        general: general,\n        addServerMessages: addServerMessages,\n        onlyUnique: onlyUnique,\n        reverseOrder: reverseOrder,\n        inlineMessages: inlineMessages,\n        position: position\n      };\n    }\n  ];\n});\nangular.module('angular-growl').service('growlMessages', [\n  '$sce',\n  '$interval',\n  function ($sce, $interval) {\n    'use strict';\n    var self = this;\n    this.directives = {};\n    var preloadDirectives = {};\n    function preLoad(referenceId) {\n      var directive;\n      if (preloadDirectives[referenceId]) {\n        directive = preloadDirectives[referenceId];\n      } else {\n        directive = preloadDirectives[referenceId] = { messages: [] };\n      }\n      return directive;\n    }\n    function directiveForRefId(referenceId) {\n      var refId = referenceId || 0;\n      return self.directives[refId] || preloadDirectives[refId];\n    }\n    this.initDirective = function (referenceId, limitMessages) {\n      if (preloadDirectives[referenceId]) {\n        this.directives[referenceId] = preloadDirectives[referenceId];\n        this.directives[referenceId].limitMessages = limitMessages;\n      } else {\n        this.directives[referenceId] = {\n          messages: [],\n          limitMessages: limitMessages\n        };\n      }\n      return this.directives[referenceId];\n    };\n    this.getAllMessages = function (referenceId) {\n      referenceId = referenceId || 0;\n      var messages;\n      if (directiveForRefId(referenceId)) {\n        messages = directiveForRefId(referenceId).messages;\n      } else {\n        messages = [];\n      }\n      return messages;\n    };\n    this.destroyAllMessages = function (referenceId) {\n      var messages = this.getAllMessages(referenceId);\n      for (var i = messages.length - 1; i >= 0; i--) {\n        messages[i].destroy();\n      }\n      var directive = directiveForRefId(referenceId);\n      if (directive) {\n        directive.messages = [];\n      }\n    };\n    this.addMessage = function (message) {\n      var directive, messages, found, msgText;\n      if (this.directives[message.referenceId]) {\n        directive = this.directives[message.referenceId];\n      } else {\n        directive = preLoad(message.referenceId);\n      }\n      messages = directive.messages;\n      if (this.onlyUnique) {\n        angular.forEach(messages, function (msg) {\n          msgText = $sce.getTrustedHtml(msg.text);\n          if (message.text === msgText && message.severity === msg.severity && message.title === msg.title) {\n            found = true;\n          }\n        });\n        if (found) {\n          return;\n        }\n      }\n      message.text = $sce.trustAsHtml(String(message.text));\n      if (message.ttl && message.ttl !== -1) {\n        message.countdown = message.ttl / 1000;\n        message.promises = [];\n        message.close = false;\n        message.countdownFunction = function () {\n          if (message.countdown > 1) {\n            message.countdown--;\n            message.promises.push($interval(message.countdownFunction, 1000, 1, 1));\n          } else {\n            message.countdown--;\n          }\n        };\n      }\n      if (angular.isDefined(directive.limitMessages)) {\n        var diff = messages.length - (directive.limitMessages - 1);\n        if (diff > 0) {\n          messages.splice(directive.limitMessages - 1, diff);\n        }\n      }\n      if (this.reverseOrder) {\n        messages.unshift(message);\n      } else {\n        messages.push(message);\n      }\n      if (typeof message.onopen === 'function') {\n        message.onopen();\n      }\n      if (message.ttl && message.ttl !== -1) {\n        var self = this;\n        message.promises.push($interval(angular.bind(this, function () {\n          self.deleteMessage(message);\n        }), message.ttl, 1, 1));\n        message.promises.push($interval(message.countdownFunction, 1000, 1, 1));\n      }\n      return message;\n    };\n    this.deleteMessage = function (message) {\n      var messages = this.getAllMessages(message.referenceId), index = -1;\n      for (var i in messages) {\n        if (messages.hasOwnProperty(i)) {\n          index = messages[i] === message ? i : index;\n        }\n      }\n      if (index > -1) {\n        messages[index].close = true;\n        messages.splice(index, 1);\n      }\n      if (typeof message.onclose === 'function') {\n        message.onclose();\n      }\n    };\n  }\n]);","/**\r\n * lscache library\r\n * Copyright (c) 2011, Pamela Fox\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *       http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/* jshint undef:true, browser:true, node:true */\r\n/* global define */\r\n\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define([], factory);\r\n    } else if (typeof module !== \"undefined\" && module.exports) {\r\n        // CommonJS/Node module\r\n        module.exports = factory();\r\n    } else {\r\n        // Browser globals\r\n        root.lscache = factory();\r\n    }\r\n}(this, function () {\r\n\r\n  // Prefix for all lscache keys\r\n  var CACHE_PREFIX = 'lscache-';\r\n\r\n  // Suffix for the key name on the expiration items in localStorage\r\n  var CACHE_SUFFIX = '-cacheexpiration';\r\n\r\n  // expiration date radix (set to Base-36 for most space savings)\r\n  var EXPIRY_RADIX = 10;\r\n\r\n  // time resolution in minutes\r\n  var EXPIRY_UNITS = 60 * 1000;\r\n\r\n  // ECMAScript max Date (epoch + 1e8 days)\r\n  var MAX_DATE = Math.floor(8.64e15/EXPIRY_UNITS);\r\n\r\n  var cachedStorage;\r\n  var cachedJSON;\r\n  var cacheBucket = '';\r\n  var warnings = false;\r\n\r\n  // Determines if localStorage is supported in the browser;\r\n  // result is cached for better performance instead of being run each time.\r\n  // Feature detection is based on how Modernizr does it;\r\n  // it's not straightforward due to FF4 issues.\r\n  // It's not run at parse-time as it takes 200ms in Android.\r\n  function supportsStorage() {\r\n    var key = '__lscachetest__';\r\n    var value = key;\r\n\r\n    if (cachedStorage !== undefined) {\r\n      return cachedStorage;\r\n    }\r\n\r\n    try {\r\n      setItem(key, value);\r\n      removeItem(key);\r\n      cachedStorage = true;\r\n    } catch (e) {\r\n        if (isOutOfSpace(e)) {    // If we hit the limit, then it means we have support, \r\n            cachedStorage = true; // just maxed it out and even the set test failed.\r\n        } else {\r\n            cachedStorage = false;\r\n        }\r\n    }\r\n    return cachedStorage;\r\n  }\r\n\r\n  // Check to set if the error is us dealing with being out of space\r\n  function isOutOfSpace(e) {\r\n    if (e && e.name === 'QUOTA_EXCEEDED_ERR' || \r\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED' || \r\n            e.name === 'QuotaExceededError') {\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // Determines if native JSON (de-)serialization is supported in the browser.\r\n  function supportsJSON() {\r\n    /*jshint eqnull:true */\r\n    if (cachedJSON === undefined) {\r\n      cachedJSON = (window.JSON != null);\r\n    }\r\n    return cachedJSON;\r\n  }\r\n\r\n  /**\r\n   * Returns the full string for the localStorage expiration item.\r\n   * @param {String} key\r\n   * @return {string}\r\n   */\r\n  function expirationKey(key) {\r\n    return key + CACHE_SUFFIX;\r\n  }\r\n\r\n  /**\r\n   * Returns the number of minutes since the epoch.\r\n   * @return {number}\r\n   */\r\n  function currentTime() {\r\n    return Math.floor((new Date().getTime())/EXPIRY_UNITS);\r\n  }\r\n\r\n  /**\r\n   * Wrapper functions for localStorage methods\r\n   */\r\n\r\n  function getItem(key) {\r\n    return localStorage.getItem(CACHE_PREFIX + cacheBucket + key);\r\n  }\r\n\r\n  function setItem(key, value) {\r\n    // Fix for iPad issue - sometimes throws QUOTA_EXCEEDED_ERR on setItem.\r\n    localStorage.removeItem(CACHE_PREFIX + cacheBucket + key);\r\n    localStorage.setItem(CACHE_PREFIX + cacheBucket + key, value);\r\n  }\r\n\r\n  function removeItem(key) {\r\n    localStorage.removeItem(CACHE_PREFIX + cacheBucket + key);\r\n  }\r\n\r\n  function eachKey(fn) {\r\n    var prefixRegExp = new RegExp('^' + CACHE_PREFIX + cacheBucket + '(.*)');\r\n    // Loop in reverse as removing items will change indices of tail\r\n    for (var i = localStorage.length-1; i >= 0 ; --i) {\r\n      var key = localStorage.key(i);\r\n      key = key && key.match(prefixRegExp);\r\n      key = key && key[1];\r\n      if (key && key.indexOf(CACHE_SUFFIX) < 0) {\r\n        fn(key, expirationKey(key));\r\n      }\r\n    }\r\n  }\r\n\r\n  function flushItem(key) {\r\n    var exprKey = expirationKey(key);\r\n\r\n    removeItem(key);\r\n    removeItem(exprKey);\r\n  }\r\n\r\n  function flushExpiredItem(key) {\r\n    var exprKey = expirationKey(key);\r\n    var expr = getItem(exprKey);\r\n\r\n    if (expr) {\r\n      var expirationTime = parseInt(expr, EXPIRY_RADIX);\r\n\r\n      // Check if we should actually kick item out of storage\r\n      if (currentTime() >= expirationTime) {\r\n        removeItem(key);\r\n        removeItem(exprKey);\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  function warn(message, err) {\r\n    if (!warnings) return;\r\n    if (!('console' in window) || typeof window.console.warn !== 'function') return;\r\n    window.console.warn(\"lscache - \" + message);\r\n    if (err) window.console.warn(\"lscache - The error was: \" + err.message);\r\n  }\r\n\r\n  var lscache = {\r\n    /**\r\n     * Stores the value in localStorage. Expires after specified number of minutes.\r\n     * @param {string} key\r\n     * @param {Object|string} value\r\n     * @param {number} time\r\n     */\r\n    set: function(key, value, time) {\r\n      if (!supportsStorage()) return;\r\n\r\n      // If we don't get a string value, try to stringify\r\n      // In future, localStorage may properly support storing non-strings\r\n      // and this can be removed.\r\n      if (typeof value !== 'string') {\r\n        if (!supportsJSON()) return;\r\n        try {\r\n          value = JSON.stringify(value);\r\n        } catch (e) {\r\n          // Sometimes we can't stringify due to circular refs\r\n          // in complex objects, so we won't bother storing then.\r\n          return;\r\n        }\r\n      }\r\n\r\n      try {\r\n        setItem(key, value);\r\n      } catch (e) {\r\n        if (isOutOfSpace(e)) {\r\n          // If we exceeded the quota, then we will sort\r\n          // by the expire time, and then remove the N oldest\r\n          var storedKeys = [];\r\n          var storedKey;\r\n          eachKey(function(key, exprKey) {\r\n            var expiration = getItem(exprKey);\r\n            if (expiration) {\r\n              expiration = parseInt(expiration, EXPIRY_RADIX);\r\n            } else {\r\n              // TODO: Store date added for non-expiring items for smarter removal\r\n              expiration = MAX_DATE;\r\n            }\r\n            storedKeys.push({\r\n              key: key,\r\n              size: (getItem(key) || '').length,\r\n              expiration: expiration\r\n            });\r\n          });\r\n          // Sorts the keys with oldest expiration time last\r\n          storedKeys.sort(function(a, b) { return (b.expiration-a.expiration); });\r\n\r\n          var targetSize = (value||'').length;\r\n          while (storedKeys.length && targetSize > 0) {\r\n            storedKey = storedKeys.pop();\r\n            warn(\"Cache is full, removing item with key '\" + key + \"'\");\r\n            flushItem(storedKey.key);\r\n            targetSize -= storedKey.size;\r\n          }\r\n          try {\r\n            setItem(key, value);\r\n          } catch (e) {\r\n            // value may be larger than total quota\r\n            warn(\"Could not add item with key '\" + key + \"', perhaps it's too big?\", e);\r\n            return;\r\n          }\r\n        } else {\r\n          // If it was some other error, just give up.\r\n          warn(\"Could not add item with key '\" + key + \"'\", e);\r\n          return;\r\n        }\r\n      }\r\n\r\n      // If a time is specified, store expiration info in localStorage\r\n      if (time) {\r\n        setItem(expirationKey(key), (currentTime() + time).toString(EXPIRY_RADIX));\r\n      } else {\r\n        // In case they previously set a time, remove that info from localStorage.\r\n        removeItem(expirationKey(key));\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Retrieves specified value from localStorage, if not expired.\r\n     * @param {string} key\r\n     * @return {string|Object}\r\n     */\r\n    get: function(key) {\r\n      if (!supportsStorage()) return null;\r\n\r\n      // Return the de-serialized item if not expired\r\n      if (flushExpiredItem(key)) { return null; }\r\n\r\n      // Tries to de-serialize stored value if its an object, and returns the normal value otherwise.\r\n      var value = getItem(key);\r\n      if (!value || !supportsJSON()) {\r\n        return value;\r\n      }\r\n\r\n      try {\r\n        // We can't tell if its JSON or a string, so we try to parse\r\n        return JSON.parse(value);\r\n      } catch (e) {\r\n        // If we can't parse, it's probably because it isn't an object\r\n        return value;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Removes a value from localStorage.\r\n     * Equivalent to 'delete' in memcache, but that's a keyword in JS.\r\n     * @param {string} key\r\n     */\r\n    remove: function(key) {\r\n      if (!supportsStorage()) return;\r\n\r\n      flushItem(key);\r\n    },\r\n\r\n    /**\r\n     * Returns whether local storage is supported.\r\n     * Currently exposed for testing purposes.\r\n     * @return {boolean}\r\n     */\r\n    supported: function() {\r\n      return supportsStorage();\r\n    },\r\n\r\n    /**\r\n     * Flushes all lscache items and expiry markers without affecting rest of localStorage\r\n     */\r\n    flush: function() {\r\n      if (!supportsStorage()) return;\r\n\r\n      eachKey(function(key) {\r\n        flushItem(key);\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Flushes expired lscache items and expiry markers without affecting rest of localStorage\r\n     */\r\n    flushExpired: function() {\r\n      if (!supportsStorage()) return;\r\n\r\n      eachKey(function(key) {\r\n        flushExpiredItem(key);\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Appends CACHE_PREFIX so lscache will partition data in to different buckets.\r\n     * @param {string} bucket\r\n     */\r\n    setBucket: function(bucket) {\r\n      cacheBucket = bucket;\r\n    },\r\n\r\n    /**\r\n     * Resets the string being appended to CACHE_PREFIX so lscache will use the default storage behavior.\r\n     */\r\n    resetBucket: function() {\r\n      cacheBucket = '';\r\n    },\r\n\r\n    /**\r\n     * Sets whether to display warnings when an item is removed from the cache or not.\r\n     */\r\n    enableWarnings: function(enabled) {\r\n      warnings = enabled;\r\n    }\r\n  };\r\n\r\n  // Return the module\r\n  return lscache;\r\n}));\r\n","(function(angular) {\n    'use strict';\n\n    // Register Angular Module\n    angular.module('cas-auth-api', []);\n\n})(window.angular);\n\n(function(module, lscache) {\n    'use strict';\n\n    module.provider('casAuthApi', function() {\n\n        // Configuration\n        var _authenticationApiBaseUrl = 'https://example.com/',\n          _endpoints = {\n              'service': 'service',\n              'token': 'token/new'\n          },\n          _ticketUrl = '',\n          _maxAttempts = 3,\n          _requireAccessToken = false,\n          _cacheAccessToken = false,\n          _cacheExpiresMinutes = 25,\n          _managedApis = [];\n\n        /**\n         * Set the base URL of the Authentication API.\n         * Default: //localhost:3000/v1\n         *\n         * @param {string} url\n         * @returns {self}\n         */\n        this.setAuthenticationApiBaseUrl = function(url) {\n            // Normalize URL by stripping tailing slash\n            _authenticationApiBaseUrl = endsWith('/', url) ? url.slice(0, -1) : url;\n            return this;\n        };\n\n        /**\n         * Sets the URL to fetch a new service ticket\n         *\n         * @param {string} url\n         * @returns {self}\n         */\n        this.setTicketUrl = function(url) {\n            _ticketUrl = url;\n            return this;\n        };\n\n        /**\n         * Add a url to the managed API list\n         *\n         * @param {string|Array.<string>} url\n         * @returns {*}\n         */\n        var addManagedApi = this.addManagedApi = function(url) {\n            var urls = angular.isString(url) ? [url] : url;\n            angular.forEach(urls, function(value) {\n                if (this.indexOf(value) === -1) {\n                    this.push(value);\n                }\n            }, _managedApis);\n            return this;\n        };\n\n        /**\n         * Require an access token on all managed API requests. Default false\n         * Enabling this feature will cause the API to fetch an access token rather\n         * than waiting for a 401 Unauthorized to occur.\n         *\n         * @param {bool} require\n         * @returns {self}\n         */\n        this.setRequireAccessToken = function(require) {\n            _requireAccessToken = !!require;\n            return this;\n        };\n\n        /**\n         * Cache Access Token between page reloads\n         *\n         * @param {bool} cache\n         * @returns {self}\n         */\n        this.setCacheAccessToken = function(cache) {\n            _cacheAccessToken = angular.isUndefined(lscache) ? false : !!cache;\n            return this;\n        };\n\n        /**\n         * Returns an full api URL for the given named endpoint\n         *\n         * @private\n         * @param {string} endpoint\n         * @returns {*}\n         */\n        function apiUrl(endpoint) {\n            if (typeof endpoint === 'undefined' || !_endpoints.hasOwnProperty(endpoint)) {\n                return _authenticationApiBaseUrl;\n            }\n            return _authenticationApiBaseUrl + '/' + _endpoints[endpoint];\n        }\n\n        // Factory\n        this.$get = [\"$injector\", \"$q\", function($injector, $q) {\n            var _accessToken,\n              _deferredAuthentication;\n\n            /**\n             * Is the given url managed\n             *\n             * @private\n             * @param {string} url\n             * @returns {boolean}\n             */\n            function isManagedApi(url) {\n                for (var i = 0; i < _managedApis.length; i++) {\n                    if (startsWith(_managedApis[i], url)) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n\n            /**\n             * Begins the authentication process\n             */\n            function beginAuthentication() {\n                // Requests already deferred, bail.\n                if (angular.isObject(_deferredAuthentication)) {\n                    return;\n                }\n\n                // Create new deferred to handle authentication process\n                _deferredAuthentication = $q.defer();\n\n                // invalidate access token and cache\n                _accessToken = undefined;\n                if (_cacheAccessToken) {\n                    lscache.remove('access_token');\n                }\n\n                // Fetch service URL\n                $injector\n                  .get('$http')\n                  .get(apiUrl('service'))\n                  .then(function(serviceResponse) {\n                      // Use wrapper ticketUrl to fetch ticket for given URL\n                      $injector\n                        .get('$http')\n                        .get(_ticketUrl, {params: {service: serviceResponse.data.data.id}})\n                        .then(function(ticketResponse) {\n                            //Exchange ticket for access_token\n                            $injector\n                              .get('$http')\n                              .get(apiUrl('token'), {params: {st: ticketResponse.data.data.id}})\n                              .then(function(tokenResponse) {\n                                  // Set access token, we do not cache here.\n                                  // Cache is handled after successful request.\n                                  _accessToken = tokenResponse.data.data.id;\n\n                                  // Resolve authentication deferred\n                                  // this will cause all pending requests to retry\n                                  _deferredAuthentication.resolve();\n                              }, function() {\n                                  _deferredAuthentication.reject('Failed to fetch token.');\n                              });\n                        }, function() {\n                            _deferredAuthentication.reject('Failed to fetch ticket.');\n                        });\n                  }, function() {\n                      _deferredAuthentication.reject('Failed to fetch service.');\n                  });\n            }\n\n            /**\n             * $http Request Interceptor\n             * Configures all managed $http requests\n             *\n             * @param {object} config\n             * @see https://docs.angularjs.org/api/ng/service/$http#interceptors\n             */\n            function requestInterceptor(config) {\n                // Ignore requests to authentication API\n                if (config.url === apiUrl('service') || config.url === apiUrl('token')) {\n                    return config;\n                }\n\n                // Only Handle URLs managed by the API\n                if (isManagedApi(config.url)) {\n                    // If missing access token and we are caching it, see if we have one\n                    if (angular.isUndefined(_accessToken) && _cacheAccessToken) {\n                        var token = lscache.get('access_token');\n                        if (token !== null) {\n                            _accessToken = token;\n                        }\n                    }\n\n                    //Increase number of attempts\n                    config.attempts = (typeof config.attempts === 'number') ? config.attempts + 1 : 1;\n\n                    // If we require a token and don't have one, or api is currently authenticating\n                    // defer the request until authentication completes\n                    if ((_requireAccessToken && angular.isUndefined(_accessToken)) ||\n                      angular.isObject(_deferredAuthentication)) {\n                        return deferRequest(config);\n                    }\n                    else {\n                        // If we have a token, add it to the request\n                        if (angular.isDefined(_accessToken)) {\n                            config.headers['Authorization'] = 'Bearer ' + _accessToken;\n                        }\n                    }\n                }\n                return config;\n            }\n\n            /**\n             * Defers request config until authentication completes\n             *\n             * @param {object} config\n             * @returns {Promise.<Object>}\n             */\n            function deferRequest(config) {\n                var deferred = $q.defer();\n                beginAuthentication();\n\n                _deferredAuthentication.promise.then(function() {\n                    // Add new token to the header\n                    config.headers['Authorization'] = 'Bearer ' + _accessToken;\n                    deferred.resolve(config);\n                }, function() {\n                    deferred.reject();\n                });\n\n                return deferred.promise;\n            }\n\n            function responseInterceptor(response) {\n                if (isManagedApi(response.config.url)) {\n                    //Cache the access token after successful managed request\n                    if (angular.isDefined(_accessToken) && _cacheAccessToken) {\n                        lscache.set('access_token', _accessToken, _cacheExpiresMinutes);\n                    }\n                }\n                return response;\n            }\n\n            /**\n             * $http Response Error Interceptor\n             *\n             * @param {object} response\n             * @see https://docs.angularjs.org/api/ng/service/$http#interceptors\n             */\n            function responseErrorInterceptor(response) {\n                if (response.status === 401 &&\n                  isManagedApi(response.config.url) &&\n                  response.config.attempts < _maxAttempts) {\n                    // New promise for request\n                    var deferred = $q.defer();\n                    beginAuthentication();\n\n                    // Wait for authentication request before retrying\n                    _deferredAuthentication.promise.then(function() {\n                        // Authentication success - retry previous request\n                        $injector.get('$http')(response.config).then(function(result) {\n                            deferred.resolve(result);\n                        }, function() {\n                            // Retry request failed\n                            deferred.reject();\n                        });\n                    }, function() {\n                        // Authentication failed\n                        deferred.reject();\n                    });\n\n                    return deferred.promise;\n                }\n                // Not handled by API, pass error through\n                return $q.reject(response);\n            }\n\n            return {\n                request: requestInterceptor,\n                response: responseInterceptor,\n                responseError: responseErrorInterceptor,\n                addManagedApi: addManagedApi\n            };\n        }];\n    });\n\n    /**\n     * The endsWith() method determines whether a string (haystack)\n     * ends with the characters of another string (needle),\n     * returning true or false as appropriate.\n     *\n     * @param {string} needle\n     * @param {string} haystack\n     * @param {number} [position]\n     * @returns {boolean}\n     */\n    function endsWith(needle, haystack, position) {\n        var subjectString = haystack.toString();\n        if (angular.isNumber(position) || !isFinite(position) ||\n          Math.floor(position) !== position ||\n          position > subjectString.length) {\n            position = subjectString.length;\n        }\n        position -= needle.length;\n        var lastIndex = subjectString.indexOf(needle, position);\n        return lastIndex !== -1 && lastIndex === position;\n    }\n\n    /**\n     * The startsWith() method determines whether a string (haystack)\n     * begins with the characters of another string (needle),\n     * returning true or false as appropriate.\n     *\n     * @param {string} needle\n     * @param {string} haystack\n     * @param {number} [position]\n     * @returns {boolean}\n     */\n    function startsWith(needle, haystack, position) {\n        position = position || 0;\n        return haystack.indexOf(needle, position) === position;\n    }\n\n})(angular.module('cas-auth-api'), window.lscache);\n\n(function(module, lscache) {\n    'use strict';\n\n    // Configure Application to use casAuthApi to manage $http requests\n    module.config([\"$httpProvider\", function($httpProvider) {\n\n        // Allow casAuthenticatedApi to intercept and manipulate requests.\n        // This will handle 401 unauthorized as well as adding an access_token\n        // to all managed APIs\n        $httpProvider.interceptors.push('casAuthApi');\n    }]);\n\n    module.run(function() {\n        if (angular.isDefined(lscache)) {\n            lscache.setBucket('cas-auth-api:');\n        }\n    });\n\n})(angular.module('cas-auth-api'), window.lscache);\n"],"sourceRoot":"/source/"}