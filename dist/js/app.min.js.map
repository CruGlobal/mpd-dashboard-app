{"version":3,"sources":["app.module.js","states/app.state.js","states/dashboard/dashboard.state.js","states/unauthorized/unauthorized.state.js","states/dashboard/countries/countries.state.js","states/dashboard/country/country.state.js","states/dashboard/staff-account/staff-account.state.js","app.config.js","api/countries.service.js","api/staff.service.js","api/user.service.js","components/percent.filter.js","settings/settings.service.js","components/googlechart/region-click.directive.js","states/dashboard/estimated-toggle.controller.js","states/dashboard/navigation.controller.js","states/dashboard/countries/countries.controller.js","states/dashboard/country/country.controller.js","states/dashboard/staff-account/staff-account.controller.js"],"names":[],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n\t'use strict';\n\n\tangular.module( 'mpdDashboard', [\n\t\t// Dependencies\n\t\t'gettext',\n\t\t'ui.router',\n\t\t'angular-growl',\n\t\t'cas-auth-api',\n\t\t'mpdDashboard.settingsService',\n\n\t\t// States\n\t\t'mpdDashboard.states.dashboard.countries'\n\t] );\n})();\n","(function ( module ) {\n\t'use strict';\n\n\tmodule.config( function ( $stateProvider, $urlRouterProvider ) {\n\t\t$urlRouterProvider.otherwise( '/countries' );\n\n\t\t$stateProvider.state( 'app', {\n\t\t\tabstract:    true,\n\t\t\turl:         '/',\n\t\t\tresolve:     {\n\t\t\t\t'user': function ( $log, $q, $state, User ) {\n\t\t\t\t\treturn User.get().$promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\ttemplateUrl: 'app/states/app.html'\n\t\t} );\n\t} );\n\n})( angular\n\t.module( 'mpdDashboard.states.app', [\n\t\t// Dependencies\n\t\t'ui.router',\n\t\t'angular-growl',\n\t\t'ui.bootstrap.collapse',\n\t\t'ui.bootstrap.dropdown',\n\n\t\t// APIs\n\t\t'mpdDashboard.api.user',\n\n\t\t// States\n\t\t'mpdDashboard.states.unauthorized'\n\t] ) );\n","(function ( module ) {\n\t'use strict';\n\n\tmodule.config( function ( $stateProvider ) {\n\n\t\t$stateProvider.state( 'dashboard', {\n\t\t\tabstract: true,\n\t\t\tparent:   'app',\n\t\t\turl:      '?estimated',\n\t\t\tresolve:  {\n\t\t\t\t'permissions': function ( $q, $state, user ) {\n\t\t\t\t\tvar deferred     = $q.defer(),\n\t\t\t\t\t\thasCountries = user.attributes.permissions.countries.length !== 0,\n\t\t\t\t\t\thasAccounts  = user.attributes.permissions.accounts.length !== 0;\n\n\t\t\t\t\tif ( hasCountries || hasAccounts ) {\n\t\t\t\t\t\tdeferred.resolve( user.attributes.permissions );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$state.go( 'unauthorized' );\n\t\t\t\t\t\tdeferred.reject( 'unauthorized' );\n\t\t\t\t\t}\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t},\n\t\t\t\t'estimated':   function ( $stateParams ) {\n\t\t\t\t\treturn {estimated: $stateParams.estimated === 'false' ? false : true};\n\t\t\t\t}\n\t\t\t},\n\t\t\tviews:    {\n\t\t\t\t'footer@app':     {\n\t\t\t\t\ttemplate:   '<div ng-if=\"estimated.estimated\" class=\"alert alert-estimated\">*Based on estimated budget(s)</div>',\n\t\t\t\t\tcontroller: function ( $scope, estimated ) {\n\t\t\t\t\t\t$scope.estimated = estimated;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'navbarForm@app': {\n\t\t\t\t\ttemplateUrl: 'app/states/dashboard/estimated-toggle.html',\n\t\t\t\t\tcontroller:  'EstimatedToggleController as toggle'\n\t\t\t\t},\n\t\t\t\t'navigation@app': {\n\t\t\t\t\ttemplateUrl: 'app/states/dashboard/navigation.html',\n\t\t\t\t\tcontroller:  'NavigationController as nav'\n\t\t\t\t}\n\t\t\t},\n\t\t\tparams:   {\n\t\t\t\testimated: {\n\t\t\t\t\tvalue:  'true',\n\t\t\t\t\tsquash: true\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t} );\n\n})( angular\n\t.module( 'mpdDashboard.states.dashboard', [\n\t\t// Dependencies\n\t\t'ui.router',\n\t\t'angular-growl',\n\t\t'ui.bootstrap.buttons',\n\n\t\t// APIs\n\t\t'mpdDashboard.api.user',\n\n\t\t// Dependent States\n\t\t'mpdDashboard.states.app'\n\t] ) );\n","(function ( module ) {\n\t'use strict';\n\n\tmodule.config( function ( $stateProvider ) {\n\n\t\t$stateProvider.state( 'unauthorized', {\n\t\t\tparent:  'app',\n\t\t\turl:     '',\n\t\t\tresolve: {\n\t\t\t\t'permissions': function ( $q, $state, User ) {\n\t\t\t\t\tvar deferred = $q.defer();\n\t\t\t\t\tUser.get().$promise.then( function ( user ) {\n\t\t\t\t\t\tvar countries = _.sortBy( user.attributes.permissions.countries, 'name' ),\n\t\t\t\t\t\t\taccounts  = _.sortBy( user.attributes.permissions.accounts, 'name' );\n\t\t\t\t\t\tif ( countries.length === 0 && accounts.length === 0 ) {\n\t\t\t\t\t\t\tdeferred.resolve( true );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( countries.length !== 0 ) {\n\t\t\t\t\t\t\tif ( countries.length === 1 ) {\n\t\t\t\t\t\t\t\tvar country = _.first( countries );\n\t\t\t\t\t\t\t\t$state.go( 'country', {id: country.id} );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t$state.go( 'countries' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvar account = _.first( accounts );\n\t\t\t\t\t\t\t$state.go( 'staffAccount', {id: account.id} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}, function () {\n\t\t\t\t\t\tdeferred.resolve( true );\n\t\t\t\t\t} );\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tviews:   {\n\t\t\t\t'@app': {\n\t\t\t\t\ttemplateUrl: 'app/states/unauthorized/unauthorized.html',\n\t\t\t\t\tcontroller:  function ( $scope, permissions, $stateParams ) {\n\t\t\t\t\t\tconsole.log( $stateParams );\n\t\t\t\t\t\t// require permissions so it gets resolved\n\t\t\t\t\t\t$scope.message = angular.isDefined( $stateParams.message ) ? $stateParams.message : undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tparams: {\n\t\t\t\tmessage: null\n\t\t\t}\n\t\t} );\n\t} );\n\n})( angular\n\t.module( 'mpdDashboard.states.unauthorized', [\n\t\t// Dependencies\n\t\t'ui.router',\n\t\t'angular-growl',\n\n\t\t// Dependent States\n\t\t'mpdDashboard.states.app',\n\t\t'mpdDashboard.states.dashboard.countries',\n\t\t'mpdDashboard.states.dashboard.staffAccount',\n\t\t'mpdDashboard.states.dashboard.country'\n\t] ) );\n","(function ( module ) {\n\t'use strict';\n\n\tmodule.config( function ( $stateProvider ) {\n\n\t\t$stateProvider.state( 'countries', {\n\t\t\tparent:  'dashboard',\n\t\t\turl:     'countries',\n\t\t\tresolve: {\n\t\t\t\t'hasCountries': function ( $state, permissions ) {\n\t\t\t\t\tif ( permissions.countries.length === 0 ) {\n\t\t\t\t\t\t$state.go( 'unauthorized' );\n\t\t\t\t\t}\n\t\t\t\t\treturn permissions.countries;\n\t\t\t\t},\n\t\t\t\t'countries':    function ( $log, $q, $state, Countries, estimated, hasCountries ) {\n\t\t\t\t\tvar deferred = $q.defer();\n\t\t\t\t\tCountries\n\t\t\t\t\t\t.query( estimated.estimated ? {estimated: true} : {} )\n\t\t\t\t\t\t.$promise\n\t\t\t\t\t\t.then( function ( countries ) {\n\t\t\t\t\t\t\tdeferred.resolve( countries );\n\t\t\t\t\t\t}, function () {\n\t\t\t\t\t\t\t$state.go( 'unauthorized' );\n\t\t\t\t\t\t} );\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t},\n\t\t\t\t'geodata':      function ( $log, $filter, countries ) {\n\t\t\t\t\tvar data       = _.reject( _.pluck( countries, 'attributes' ), function ( obj ) {\n\t\t\t\t\t\t\treturn angular.isUndefined( obj.iso_code ) || _.isNull( obj.iso_code ) || obj.iso_code === '';\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\tiso_codes  = ['Country'].concat( _.pluck( data, 'iso_code' ) ),\n\t\t\t\t\t\tmpd_levels = ['MPD Level'].concat( _.map( _.pluck( data, 'mpd_level' ), function ( num ) {\n\t\t\t\t\t\t\treturn $filter( 'percent' )( num, 2, false );\n\t\t\t\t\t\t} ) );\n\t\t\t\t\treturn _.zip( iso_codes, mpd_levels );\n\t\t\t\t}\n\t\t\t},\n\t\t\tviews:   {\n\t\t\t\t'@app': {\n\t\t\t\t\ttemplateUrl: 'app/states/dashboard/countries/countries.html',\n\t\t\t\t\tcontroller:  'CountriesController as countries'\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t} );\n\n})( angular\n\t.module( 'mpdDashboard.states.dashboard.countries', [\n\t\t// Dependencies\n\t\t'ui.router',\n\t\t'angular-growl',\n\t\t'googlechart',\n\t\t'mpdDashboard.components.googlechart.regionClick',\n\t\t'mpdDashboard.components.percent',\n\n\t\t// API\n\t\t'mpdDashboard.api.countries',\n\n\t\t// Dependent States\n\t\t'mpdDashboard.states.dashboard',\n\t\t'mpdDashboard.states.dashboard.country',\n\t\t'mpdDashboard.states.unauthorized'\n\t] ) );\n","(function ( module ) {\n\t'use strict';\n\n\tmodule.config( function ( $stateProvider ) {\n\n\t\t$stateProvider.state( 'country', {\n\t\t\tparent:  'dashboard',\n\t\t\turl:     'country/{id:int}',\n\t\t\tresolve: {\n\t\t\t\t'hasCountry':       function ( $state, $stateParams, permissions ) {\n\t\t\t\t\tvar country = _.findWhere( permissions.countries, {id: $stateParams.id} );\n\t\t\t\t\tif ( angular.isUndefined( country ) ) {\n\t\t\t\t\t\t$state.go( 'unauthorized' );\n\t\t\t\t\t}\n\t\t\t\t\treturn country;\n\t\t\t\t},\n\t\t\t\t'country':          function ( $q, $state, $stateParams, Countries, estimated, hasCountry ) {\n\t\t\t\t\tvar deferred = $q.defer();\n\t\t\t\t\tCountries\n\t\t\t\t\t\t.get(\n\t\t\t\t\t\t\testimated.estimated ? {\n\t\t\t\t\t\t\t\tid:        $stateParams.id,\n\t\t\t\t\t\t\t\testimated: true\n\t\t\t\t\t\t\t} : {id: $stateParams.id}\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.$promise\n\t\t\t\t\t\t.then( function ( country ) {\n\t\t\t\t\t\t\tdeferred.resolve( country );\n\t\t\t\t\t\t}, function () {\n\t\t\t\t\t\t\t$state.go( 'unauthorized' );\n\t\t\t\t\t\t} );\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t},\n\t\t\t\t'mpdHealthData':    function ( country ) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t['Support Level', 'Percentage Raised'],\n\t\t\t\t\t\t['> 100%', country.attributes.mpd_health[0].length],\n\t\t\t\t\t\t['80 - 100%', country.attributes.mpd_health[1].length],\n\t\t\t\t\t\t['50 - 80%', country.attributes.mpd_health[2].length],\n\t\t\t\t\t\t['< 50%', country.attributes.mpd_health[3].length],\n\t\t\t\t\t\t['No Budget', country.attributes.mpd_health[4].length]\n\t\t\t\t\t];\n\t\t\t\t},\n\t\t\t\t'supportTrendData': function ( $window, $q, googleChartApiPromise, country ) {\n\t\t\t\t\tvar deferred = $q.defer();\n\t\t\t\t\tgoogleChartApiPromise.then( function () {\n\t\t\t\t\t\tvar average_support = _.map( country.attributes.average_support, function ( data ) {\n\t\t\t\t\t\t\tdata[0] = new Date( data[0] );\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tvar data = $window.google.visualization.arrayToDataTable(\n\t\t\t\t\t\t\t[['Period', 'Average Support Level', 'Staff with more than 90%']].concat( average_support )\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tvar dateFormat = new $window.google.visualization.DateFormat( {\n\t\t\t\t\t\t\tpattern: 'MMM y'\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tdateFormat.format( data, 0 );\n\n\t\t\t\t\t\tvar percentFormat = new $window.google.visualization.NumberFormat( {\n\t\t\t\t\t\t\tpattern:        '#,###%',\n\t\t\t\t\t\t\tfractionDigits: 2\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tpercentFormat.format( data, 1 );\n\t\t\t\t\t\tpercentFormat.format( data, 2 );\n\n\t\t\t\t\t\tdeferred.resolve( data );\n\t\t\t\t\t}, function () {\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t} );\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tviews:   {\n\t\t\t\t'@app':      {\n\t\t\t\t\ttemplateUrl: 'app/states/dashboard/country/country.html',\n\t\t\t\t\tcontroller:  'CountryController as country'\n\t\t\t\t},\n\t\t\t\t'title@app': {\n\t\t\t\t\ttemplate:   '<span>{{name}}</span>',\n\t\t\t\t\tcontroller: function ( $scope, country ) {\n\t\t\t\t\t\t$scope.name = country.attributes.name;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t} );\n\n})( angular\n\t.module( 'mpdDashboard.states.dashboard.country', [\n\t\t// Dependencies\n\t\t'ui.router',\n\t\t'angular-growl',\n\t\t'googlechart',\n\t\t'mpdDashboard.components.percent',\n\n\t\t// API\n\t\t'mpdDashboard.api.countries',\n\n\t\t// Dependent States\n\t\t'mpdDashboard.states.dashboard',\n\t\t'mpdDashboard.states.dashboard.staffAccount',\n\t\t'mpdDashboard.states.unauthorized'\n\t] ) );\n","(function ( module ) {\n\t'use strict';\n\n\tmodule.config( function ( $stateProvider ) {\n\n\t\t$stateProvider.state( 'staffAccount', {\n\t\t\tparent:  'dashboard',\n\t\t\turl:     'staff/{id:int}',\n\t\t\tresolve: {\n\t\t\t\t'account':             function ( $q, $state, $stateParams, Staff, estimated, permissions ) {\n\t\t\t\t\tvar deferred = $q.defer();\n\t\t\t\t\tStaff\n\t\t\t\t\t\t.get(\n\t\t\t\t\t\t\testimated.estimated ? {\n\t\t\t\t\t\t\t\tid:        $stateParams.id,\n\t\t\t\t\t\t\t\testimated: true\n\t\t\t\t\t\t\t} : {id: $stateParams.id}\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.$promise\n\t\t\t\t\t\t.then( function ( account ) {\n\t\t\t\t\t\t\tdeferred.resolve( account );\n\t\t\t\t\t\t}, function () {\n\t\t\t\t\t\t\t$state.go( 'unauthorized' );\n\t\t\t\t\t\t} );\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t},\n\t\t\t\t'budgetTrendData':     function ( $window, $q, googleChartApiPromise, account ) {\n\t\t\t\t\tvar deferred = $q.defer();\n\t\t\t\t\tgoogleChartApiPromise.then( function () {\n\t\t\t\t\t\tvar budget_trend = _.map( account.attributes.budget_trend, function ( data ) {\n\t\t\t\t\t\t\tdata[0] = new Date( data[0] );\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tvar data = $window.google.visualization.arrayToDataTable(\n\t\t\t\t\t\t\t[['Month', 'Balance', 'Income', 'To Raise', 'Expenses', 'Expense Budget']].concat( budget_trend )\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tvar dateFormat = new $window.google.visualization.DateFormat( {\n\t\t\t\t\t\t\tpattern: 'MMM y'\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tdateFormat.format( data, 0 );\n\n\t\t\t\t\t\tdeferred.resolve( data );\n\t\t\t\t\t}, function () {\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t} );\n\t\t\t\t\treturn deferred.promise;\n\t\t\t\t},\n\t\t\t\t'incomeBreakdownData': function ( account ) {\n\t\t\t\t\treturn [['Income Type', 'Amount']].concat( account.attributes.income );\n\t\t\t\t}\n\t\t\t},\n\t\t\tviews:   {\n\t\t\t\t'@app': {\n\t\t\t\t\ttemplateUrl: 'app/states/dashboard/staff-account/staff-account.html',\n\t\t\t\t\tcontroller:  'StaffAccountController as staffAccountCtrl'\n\t\t\t\t},\n\t\t\t\t'title@app': {\n\t\t\t\t\ttemplate:   '<span>{{name}}</span>',\n\t\t\t\t\tcontroller: function ( $scope, account ) {\n\t\t\t\t\t\t$scope.name = account.attributes.name;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t} );\n\n})( angular\n\t.module( 'mpdDashboard.states.dashboard.staffAccount', [\n\t\t// Dependencies\n\t\t'ui.router',\n\t\t'angular-growl',\n\t\t'googlechart',\n\t\t'ui.bootstrap.dropdown',\n\t\t'mpdDashboard.components.percent',\n\n\t\t// API\n\t\t'mpdDashboard.api.staff',\n\n\t\t// Dependent States\n\t\t'mpdDashboard.states.dashboard.country',\n\t\t'mpdDashboard.states.unauthorized'\n\t] ) );\n","(function ( module ) {\n\t'use strict';\n\n\t// Enable html5mode\n\tmodule.config( function ( $locationProvider ) {\n\t\t$locationProvider.html5Mode( true );\n\t} );\n\n\t// Initialize Application Settings\n\tmodule.config( function ( SettingsProvider ) {\n\t\tSettingsProvider.setConfig( window.MPDDashboard.config );\n\t} );\n\n\t// Configure Debug Logging\n\tmodule.config( function ( $logProvider, SettingsProvider ) {\n\t\t$logProvider.debugEnabled( SettingsProvider.isDevelopment() );\n\t} );\n\n\t// Configure Cas Authenticated Api\n\tmodule.config( function ( casAuthApiProvider, SettingsProvider ) {\n\t\tcasAuthApiProvider\n\t\t\t.setRequireAccessToken( true )\n\t\t\t.setCacheAccessToken( true )\n\t\t\t.setAuthenticationApiBaseUrl( SettingsProvider.casAuthApiBaseUrl() )\n\t\t\t.setTicketUrl( SettingsProvider.ticketUrl() );\n\t} );\n\n\t// Configure Growl\n\tmodule.config( function ( growlProvider ) {\n\t\tgrowlProvider.globalPosition( 'top-right' );\n\t\tgrowlProvider.globalDisableCountDown( true );\n\t\tgrowlProvider.globalTimeToLive( {success: 10000, error: -1, warning: -1, info: 10000} );\n\t} );\n\n\t// Register managed API with casAuthApi\n\tmodule.run( function ( casAuthApi, Settings ) {\n\t\tcasAuthApi.addManagedApi( Settings.api.mpdDashboard() );\n\t} );\n\n\tmodule.run( function ( $log, $rootScope ) {\n\t\t$rootScope.$on( '$stateChangeStart', function () {\n\t\t\tangular.element( 'div.loading' ).removeClass( 'hide' );\n\t\t} );\n\t\t$rootScope.$on( '$stateChangeSuccess', function () {\n\t\t\tangular.element( 'div.loading' ).addClass( 'hide' );\n\t\t} );\n\t\t$rootScope.$on( '$stateChangeError', function ( event, toState, toParams, fromState, fromParams, error ) {\n\t\t\t$log.error( '$stateChangeError:', toState, toParams, error );\n\t\t} );\n\t} );\n\n})( angular.module( 'mpdDashboard' ) );\n","/**\n GET /countries?estimated=(false|true)\n\n Fetch a list of countries (ministries technically) and corresponding mpd status using either actual or estimated budgets.\n If estimated is missing, assume false.\n\n Response:\n [\n {\n\t name: \"Chile\",     // Country Name\n\t min_code: \"CHL\"       // Ministry Code\n\t iso_code: \"CL\",       // ISO 3166 alpha-2\n\t mpd_level: 0.72,        // MPD Level used in geochart\n\t staff_with_budget: 0, // Staff with a budget (%)\n\t staff_raised: [       // % of Staff who have raised\n\t\t 0,    // Less than 50%\n\t\t 0.75, // 50 to 80%\n\t\t 0.25, // 80 to 100%\n\t\t 0     // Greater than 100%\n\t ],\n\t budget_spent: 1,      // % of Expense Budget Spent\n\t raised_locally: 0.7   // Support raised locally (%)\n },\n ...\n ]\n */\n\n(function ( module ) {\n\t'use strict';\n\tmodule.factory( 'Countries', function ( $log, $resource, Settings ) {\n\t\tvar returnDataAttr = function ( response ) {\n\t\t\treturn response.data.data;\n\t\t};\n\n\t\treturn $resource( Settings.api.mpdDashboard( '/countries/:id' ), {}, {\n\t\t\tquery: {method: 'GET', interceptor: {response: returnDataAttr}},\n\t\t\tget:   {method: 'GET', interceptor: {response: returnDataAttr}}\n\t\t} );\n\t} );\n\n})( angular.module( 'mpdDashboard.api.countries', ['ngResource'] ) );\n","/**\n GET /account?min_code=(min_code)&person_id=(person_id)&estimated=(true|false)\n\n Returns mpd data for the selected staff account at the given ministry\n\n Response:\n {\n \tname: \"Babyvic Spomaul\",\n \tperson_id: \"uuid\",\n \tmin_code: \"RUS\",\n \tmpd_analysis: 0.8, // red/yellow/green traffic light, possibly number between 0 and 1?\n \taverage_support:[\n \t\t0.964, // Year\n \t\t0.991, // Quarter\n \t\t1.116 // Month\n \t],\n \tincome: [\n \t\t// ['Income Type', 'Amount'],\n\t\t['Local Income', 6672.95],\n\t\t['Foreign Income', 0.00],\n\t\t['Subsidy', 0.00]\n \t],\n\tbudget_trend: [\n\t\t// [ 'Month', 'Balance', 'Income', 'To Raise', 'Expenses', 'Expense Budget' ]\n\t\t['2015-04', 31866.54, 3076.00, 0.00, 5188.74, 0.00 ],\n\t\t[ ... ],\n\t\t[ ... ],\n\t\t[ ... ]\n\t]\n }\n */\n\n(function ( module ) {\n\t'use strict';\n\tmodule.factory( 'Staff', function ( $log, $resource, Settings ) {\n\t\tvar returnDataAttr = function ( response ) {\n\t\t\treturn response.data.data;\n\t\t};\n\n\t\treturn $resource( Settings.api.mpdDashboard( '/staff/:id' ), {}, {\n\t\t\tget: {method: 'GET', interceptor: {response: returnDataAttr}},\n\t\t\tremove: {method: 'DELETE', interceptor: {response: returnDataAttr}}\n\t\t} );\n\t} );\n\n})( angular.module( 'mpdDashboard.api.staff', ['ngResource'] ) );\n","(function ( module ) {\n\t'use strict';\n\n\tmodule.factory( 'User', function ( $log, $resource, Settings ) {\n\t\tvar returnDataAttr = function ( response ) {\n\t\t\treturn response.data.data;\n\t\t};\n\n\t\treturn $resource( Settings.api.mpdDashboard( '/user' ), {}, {\n\t\t\tget: {method: 'GET', interceptor: {response: returnDataAttr}}\n\t\t} );\n\t} );\n\n})( angular.module( 'mpdDashboard.api.user', ['ngResource'] ) );\n","(function ( module ) {\n\t'use strict';\n\n\tmodule.filter( 'percent', function ( $window ) {\n\t\treturn function ( input, decimals, suffix ) {\n\t\t\tdecimals = angular.isNumber( decimals ) ? decimals : 2;\n\t\t\tif ( angular.isUndefined( suffix ) ) {\n\t\t\t\tsuffix = '%';\n\t\t\t}\n\t\t\tif ( $window.isNaN( input ) ) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn Math.round( input * Math.pow( 10, decimals + 2 ) ) / Math.pow( 10, decimals ) + (suffix ? suffix : 0)\n\t\t};\n\t} );\n\n})( angular.module( 'mpdDashboard.components.percent', [] ) );\n\n","(function ( module ) {\n\t'use strict';\n\n\tmodule.provider( 'Settings', function () {\n\t\tvar config = {};\n\n\t\tthis.setConfig = function ( c ) {\n\t\t\tconfig = c;\n\t\t};\n\n\t\tthis.isDevelopment = function () {\n\t\t\treturn config.environment === 'development';\n\t\t};\n\n\t\tthis.casAuthApiBaseUrl = function() {\n\t\t\treturn config.api.casAuthApi;\n\t\t};\n\n\t\tthis.ticketUrl = function() {\n\t\t\treturn config.api.refresh;\n\t\t};\n\n\t\tfunction apiUrl( base, path ) {\n\t\t\tif ( typeof path === 'undefined' ) return base;\n\t\t\treturn ( path.indexOf( '/' ) === 0 )\n\t\t\t\t? base + path\n\t\t\t\t: base + '/' + path;\n\t\t}\n\n\t\tthis.$get = function () {\n\t\t\treturn {\n\t\t\t\tapi: {\n\t\t\t\t\tmpdDashboard: function ( path ) {\n\t\t\t\t\t\treturn apiUrl( config.api.mpdDashboard, path );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} );\n\n})( angular.module( 'mpdDashboard.settingsService', [] ) );\n","(function ( module ) {\n\t'use strict';\n\n\tmodule.directive( 'regionClick', function ( $log ) {\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tscope:    false,\n\t\t\trequire:  'googleChart',\n\t\t\tlink:     function ( scope, element, attrs, googleChartController ) {\n\t\t\t\tfunction callback( chartWrapper, chart, args ) {\n\t\t\t\t\tcallback.$inject = ['chartWrapper', 'chart', 'args'];\n\t\t\t\t\tvar returnValues = {\n\t\t\t\t\t\tchartWrapper: chartWrapper,\n\t\t\t\t\t\tchart:        chart,\n\t\t\t\t\t\targs:         args,\n\t\t\t\t\t\tregion:       args[0].region\n\t\t\t\t\t};\n\t\t\t\t\tscope.$apply( function () {\n\t\t\t\t\t\tscope.$eval( attrs.regionClick, returnValues );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tgoogleChartController.registerChartListener( 'regionClick', callback, this );\n\t\t\t}\n\t\t};\n\t} );\n\n})( angular.module( 'mpdDashboard.components.googlechart.regionClick', [\n\t'googlechart'\n] ) );\n","(function ( module ) {\n\t'use strict';\n\n\tfunction EstimatedToggleController( $scope, $state, estimated ) {\n\t\tvar self = this;\n\t\tthis.model = estimated;\n\n\t\t$scope.$watch( function ( $scope ) {\n\t\t\treturn self.model.estimated\n\t\t}, function ( newVal, oldVal ) {\n\t\t\t$state.go( $state.current, {estimated: newVal} );\n\t\t} );\n\t}\n\n\tmodule.controller( 'EstimatedToggleController', EstimatedToggleController );\n\n})( angular.module( 'mpdDashboard.states.dashboard' ) );\n","(function ( module ) {\n\t'use strict';\n\n\tfunction NavigationController( $log, $state, permissions ) {\n\t\tthis.$state = $state;\n\t\tthis.countries = permissions.countries;\n\t\tthis.accounts = permissions.accounts;\n\t}\n\n\tmodule.controller( 'NavigationController', NavigationController );\n\n})( angular.module( 'mpdDashboard.states.dashboard' ) );\n","(function ( module ) {\n\t'use strict';\n\n\tfunction CountriesController( $log, $window, $state, countries, geodata ) {\n\t\tthis.$state = $state;\n\t\tthis.countries = countries;\n\t\tthis.geochart = {\n\t\t\ttype:    'GeoChart',\n\t\t\tdata:    geodata,\n\t\t\toptions: {\n\t\t\t\t// Fetch backgroundColor for containing div background\n\t\t\t\tbackgroundColor: $window.jQuery( '.dashboard-well' ).css( 'backgroundColor' ),\n\t\t\t\tcolorAxis:       {\n\t\t\t\t\tminValue: 50,\n\t\t\t\t\tmaxValue: 100,\n\t\t\t\t\tcolors:   [\n\t\t\t\t\t\t$window.jQuery( '.countries-geochart-colors .danger' ).css( 'backgroundColor' ),\n\t\t\t\t\t\t$window.jQuery( '.countries-geochart-colors .warning' ).css( 'backgroundColor' ),\n\t\t\t\t\t\t$window.jQuery( '.countries-geochart-colors .success' ).css( 'backgroundColor' )\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tCountriesController.prototype.onReady = function ( chartWrapper ) {\n\t\t// This fixes the issue initially, but any region mouseover /click break it.\n\n\t\t// Fixes issue with gradients and HTML <base> tag\n\t\t// @see https://github.com/google/google-visualization-issues/issues/2000\n\t\tjQuery( chartWrapper.getContainerId() ).find( 'svg' ).each( function () {\n\t\t\tjQuery( this ).find( \"g\" ).each( function () {\n\t\t\t\tif ( jQuery( this ).attr( 'clip-path' ) ) {\n\t\t\t\t\tif ( jQuery( this ).attr( 'clip-path' ).indexOf( 'url(#' ) == -1 ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tjQuery( this ).attr( 'clip-path', 'url(' + document.location + jQuery( this ).attr( 'clip-path' ).substring( 4 ) )\n\t\t\t\t}\n\t\t\t} );\n\t\t\tjQuery( this ).find( \"rect\" ).each( function () {\n\t\t\t\tif ( jQuery( this ).attr( 'fill' ) ) {\n\t\t\t\t\tif ( jQuery( this ).attr( 'fill' ).indexOf( 'url(#' ) == -1 ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tjQuery( this ).attr( 'fill', 'url(' + document.location + jQuery( this ).attr( 'fill' ).substring( 4 ) )\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t};\n\n\tCountriesController.prototype.onRegionClick = function ( region ) {\n\t\tvar country = _.filter( this.countries, function ( obj ) {\n\t\t\treturn obj.attributes.iso_code === region;\n\t\t} ).pop();\n\t\tif ( angular.isDefined( country ) ) {\n\t\t\tthis.$state.go( 'country', {id: country.id} );\n\t\t}\n\t};\n\n\tmodule.controller( 'CountriesController', CountriesController );\n\n})( angular.module( 'mpdDashboard.states.dashboard.countries' ) );\n","(function ( module ) {\n\t'use strict';\n\n\tfunction CountryController( $log, $window, $state, mpdHealthData, supportTrendData, country ) {\n\t\tthis.$state = $state;\n\n\t\tthis.mpdHealth = {\n\t\t\ttype:    'PieChart',\n\t\t\tdata:    mpdHealthData,\n\t\t\toptions: {\n\t\t\t\tpieHole:             0.4, reverseCategories: false,\n\t\t\t\tchartArea:           {\n\t\t\t\t\tleft:   60,\n\t\t\t\t\ttop:    20,\n\t\t\t\t\twidth:  \"120%\",\n\t\t\t\t\theight: \"90%\"\n\t\t\t\t},\n\t\t\t\tlegend:              {\n\t\t\t\t\ttextStyle: {\n\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tbackgroundColor:     $window.jQuery( '.mpd-health' ).css( 'backgroundColor' ),\n\t\t\t\tpieSliceBorderColor: $window.jQuery( '.mpd-health' ).css( 'backgroundColor' ),\n\t\t\t\tslices:              [\n\t\t\t\t\t{color: $window.jQuery( '.mpd-health .chart-colors .color1' ).css( 'backgroundColor' )},\n\t\t\t\t\t{color: $window.jQuery( '.mpd-health .chart-colors .color2' ).css( 'backgroundColor' )},\n\t\t\t\t\t{color: $window.jQuery( '.mpd-health .chart-colors .color3' ).css( 'backgroundColor' )},\n\t\t\t\t\t{color: $window.jQuery( '.mpd-health .chart-colors .color4' ).css( 'backgroundColor' )},\n\t\t\t\t\t{color: $window.jQuery( '.mpd-health .chart-colors .color5' ).css( 'backgroundColor' )}\n\t\t\t\t]\n\t\t\t}\n\t\t};\n\n\t\tthis.supportTrend = {\n\t\t\ttype:    'LineChart',\n\t\t\tdata:    supportTrendData,\n\t\t\toptions: {\n\t\t\t\tlegend:          {\n\t\t\t\t\ttextStyle: {\n\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tbackgroundColor: $window.jQuery( '.support-trend' ).css( 'backgroundColor' ),\n\t\t\t\tcolors:          [\n\t\t\t\t\t$window.jQuery( '.support-trend .chart-colors .color1' ).css( 'backgroundColor' ),\n\t\t\t\t\t$window.jQuery( '.support-trend .chart-colors .color2' ).css( 'backgroundColor' )\n\t\t\t\t],\n\t\t\t\tlineWidth:       3,\n\t\t\t\tpointSize:       4,\n\t\t\t\thAxis:           {baselineColor: 'white', format: 'MMM y', textStyle: {color: 'white'}},\n\t\t\t\tvAxis:           {baselineColor: 'white', format: 'percent', textStyle: {color: 'white'}}\n\t\t\t}\n\t\t};\n\n\t\tthis.onMpdHealthSelect = function ( selectedItem ) {\n\t\t\tif ( angular.isUndefined( selectedItem ) ) {\n\t\t\t\tdelete this.staff;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.staffHeading = mpdHealthData[selectedItem.row + 1][0];\n\t\t\t\tthis.staff = country.attributes.mpd_health[selectedItem.row];\n\t\t\t}\n\t\t}\n\t}\n\n\tmodule.controller( 'CountryController', CountryController );\n\n})( angular.module( 'mpdDashboard.states.dashboard.country' ) );\n","(function ( module ) {\n\t'use strict';\n\n\tfunction StaffAccountController( $log, $window, $state, account, budgetTrendData, incomeBreakdownData, Staff ) {\n\t\tvar budgetTrendDiv        = $window.jQuery( '.budget-trend' ),\n\t\t\tincomeBreakdownDiv    = $window.jQuery( '.income-breakdown' ),\n\t\t\tbackgroundColor       = budgetTrendDiv.css( 'backgroundColor' ),\n\t\t\ttextColor             = budgetTrendDiv.css( 'color' ),\n\t\t\ttrendColors           = [\n\t\t\t\tbudgetTrendDiv.find( '.color1' ).css( 'backgroundColor' ),\n\t\t\t\tbudgetTrendDiv.find( '.color2' ).css( 'backgroundColor' ),\n\t\t\t\tbudgetTrendDiv.find( '.color3' ).css( 'backgroundColor' ),\n\t\t\t\tbudgetTrendDiv.find( '.color4' ).css( 'backgroundColor' ),\n\t\t\t\tbudgetTrendDiv.find( '.color5' ).css( 'backgroundColor' )\n\t\t\t],\n\t\t\tincomeBreakdownColors = [\n\t\t\t\tincomeBreakdownDiv.find( '.color1' ).css( 'backgroundColor' ),\n\t\t\t\tincomeBreakdownDiv.find( '.color2' ).css( 'backgroundColor' ),\n\t\t\t\tincomeBreakdownDiv.find( '.color3' ).css( 'backgroundColor' )\n\t\t\t];\n\n\t\tthis.$state = $state;\n\t\tthis.mpdAnalysis = account.attributes.mpd_analysis;\n\t\tthis.averageSupport = account.attributes.average_support;\n\t\tthis.incorrect_association = account.attributes.incorrect_association;\n\n\t\tthis.budgetTrend = {\n\t\t\ttype:    'LineChart',\n\t\t\tdata:    budgetTrendData,\n\t\t\tview:    {\n\t\t\t\tcolumns: [0, 1, 2, 3, 4, 5]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tlegend:          {\n\t\t\t\t\ttextStyle: {\n\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tbackgroundColor: backgroundColor,\n\t\t\t\tcolors:          angular.copy( trendColors ),\n\t\t\t\tlineWidth:       3,\n\t\t\t\tseries:          {\n\t\t\t\t\t2: {\n\t\t\t\t\t\tlineDashStyle: [10, 6]\n\t\t\t\t\t},\n\t\t\t\t\t4: {\n\t\t\t\t\t\tlineDashStyle: [10, 6]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\thAxis:           {baselineColor: textColor, textStyle: {color: textColor}},\n\t\t\t\tvAxis:           {baselineColor: textColor, textStyle: {color: textColor}}\n\t\t\t}\n\t\t};\n\n\t\tthis.hideTrendSeries = function ( selectedItem ) {\n\t\t\tif ( angular.isUndefined( selectedItem ) ) return;\n\t\t\tvar col = selectedItem.column;\n\t\t\tif ( selectedItem.row === null ) {\n\n\t\t\t\t// If series is enabled, disable it\n\t\t\t\tif ( this.budgetTrend.view.columns[col] == col ) {\n\t\t\t\t\tthis.budgetTrend.view.columns[col] = {\n\t\t\t\t\t\tlabel: budgetTrendData.getColumnLabel( col ),\n\t\t\t\t\t\ttype:  budgetTrendData.getColumnType( col ),\n\t\t\t\t\t\tcalc:  function () {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tthis.budgetTrend.options.colors[col - 1] = '#CCCCCC';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.budgetTrend.view.columns[col] = col;\n\t\t\t\t\tthis.budgetTrend.options.colors[col - 1] = trendColors[col - 1];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.incomeBreakdown = {\n\t\t\ttype:    'PieChart',\n\t\t\tdata:    incomeBreakdownData,\n\t\t\toptions: {\n\t\t\t\tpieHole:             0.4,\n\t\t\t\treverseCategories:   false,\n\t\t\t\tchartArea:           {\n\t\t\t\t\tleft:   60,\n\t\t\t\t\ttop:    20,\n\t\t\t\t\twidth:  \"120%\",\n\t\t\t\t\theight: \"90%\"\n\t\t\t\t},\n\t\t\t\tlegend:              {\n\t\t\t\t\ttextStyle: {\n\t\t\t\t\t\tcolor: textColor\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tbackgroundColor:     backgroundColor,\n\t\t\t\tpieSliceBorderColor: backgroundColor,\n\t\t\t\tslices:              [\n\t\t\t\t\t{color: incomeBreakdownColors[0]},\n\t\t\t\t\t{color: incomeBreakdownColors[1]},\n\t\t\t\t\t{color: incomeBreakdownColors[2]}\n\t\t\t\t]\n\t\t\t}\n\t\t};\n\n\t\tthis.reportIncorrectAssociation = function () {\n\t\t\tvar self = this;\n\t\t\tStaff\n\t\t\t\t.remove( {id: account.id} )\n\t\t\t\t.$promise\n\t\t\t\t.then( function ( acct ) {\n\t\t\t\t\tself.incorrect_association = true;\n\t\t\t\t}, function () {\n\t\t\t\t} );\n\t\t}\n\t}\n\n\tmodule.controller( 'StaffAccountController', StaffAccountController );\n\n})( angular.module( 'mpdDashboard.states.dashboard.staffAccount' ) );\n"],"sourceRoot":"/source/"}